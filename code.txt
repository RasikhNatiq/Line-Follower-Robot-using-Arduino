#include <SPI.h>
#include <SD.h>
#include <Servo.h> //Servo motor library. This is standard library
#include <NewPing.h> //Ultrasonic sensor function library. You must install this library 
//File myFile;
//sensor pins 
#define trig_pin A4 //analog output 1
#define echo_pin A5 //analog input 2
#define maximum_distance 200
boolean goesForward = false;
int distance = 100;
NewPing sonar(trig_pin, echo_pin, maximum_distance); //sensor function
Servo servo_motor; //our servo name
void setup() 
{
  Serial.begin(9600);
  SD.begin(10);
  Serial.println("initialization done.");
  servo_motor.attach(8); //our servo pin
  servo_motor.write(115);
  delay(100);
  distance = readPing();
  pinMode(2, INPUT);//left sensor 1 
  pinMode(4, INPUT); //left sensor 2
  pinMode(5, INPUT); //middle sensor3
  pinMode(6, INPUT); //right sensor 4
  pinMode(7, INPUT); //right sensor5
  pinMode(3, OUTPUT); // pwm
  pinMode(8, OUTPUT);
  pinMode(A0, OUTPUT); //LEFT MOTOR.
  pinMode(A1, OUTPUT);
  pinMode(A2, OUTPUT); //RIGHT MOTOR.
  pinMode(A3, OUTPUT);
} 
// put your setup code here, to run once
void loop()
{ 
  int distanceRight = 0;
  int distanceLeft = 0;
  delay(50);
  if (distance <= 25)
  {
    distanceRight = lookRight();
    delay(0);
    distanceLeft = lookLeft();
    delay(0);
  }
  distance = readPing();
  if (distance<=25)
  {
    STOP();
  }
  else
  {
    int a = digitalRead(2);
    int b = digitalRead(4);
    int c = digitalRead(5);
    int d = digitalRead(6); 
    int e = digitalRead(7);
    if ((a == LOW && b == LOW && c == HIGH && d==LOW && e== LOW)||(a == LOW && b == HIGH && c == HIGH && 
    d==HIGH && e== LOW)||(a == HIGH && b == HIGH && c == HIGH && d==HIGH && e== HIGH))
    { 
      analogWrite(A0, 0);
      analogWrite(A1, 255);
      analogWrite(A2, 0);
      analogWrite(A3, 255);
      analogWrite(3, 100);
      //f();
    }
    if ((a == LOW && b == HIGH && c == LOW && d==LOW && e==LOW)||(a==HIGH && b== HIGH && c==LOW &&d== LOW &&e==LOW)||
    (a==HIGH && b== HIGH && c==HIGH &&d== LOW &&e==LOW)||(a==HIGH && b== LOW && c==LOW &&d== LOW &&e==LOW)||
    (a==LOW && b== HIGH && c==HIGH &&d== LOW &&e==LOW)||(a==HIGH && b== HIGH && c==HIGH && d==HIGH && e==LOW)) //LEFT TURN
    {
      analogWrite(A0, 0);
      analogWrite(A1, 255);
      analogWrite(A2, 0);
      analogWrite(A3, 0);
      analogWrite(3, 100);
      //l(); 
    } 
    if ((a == LOW && b == LOW && c == LOW && d==HIGH && e==LOW)||(a==LOW && b== LOW && c==LOW &&d== HIGH &&e==HIGH)||
    (a==LOW && b== LOW && c==HIGH &&d== HIGH &&e==HIGH)||(a==LOW && b== LOW && c==LOW &&d== LOW &&e==HIGH)||
    (a==LOW && b== HIGH && c==HIGH &&d== HIGH &&e==HIGH)||(a==LOW && b== LOW && c==HIGH &&d== HIGH &&e==LOW) ) //RIGHT TURN
    {
      analogWrite(A0, 0);
      analogWrite(A1, 0);
      analogWrite(A2, 0);
      analogWrite(A3, 255);
      analogWrite(3, 100);
      //r(); 
    }
    if (a == LOW && b == LOW && c == LOW && d==LOW && e== LOW) // BACK 
    {
      analogWrite(A0, 0);
      analogWrite(A1, 255);
      analogWrite(A2, 255);
      analogWrite(A3, 0); 
      analogWrite(3, 100);
      //bs(); 
    }
  }
}
int lookRight()
{
  servo_motor.write(50);
  delay(100);
  int distance = readPing();
  delay(100);
  servo_motor.write(115);
  return distance;
}
int lookLeft()
{
  servo_motor.write(170);
  delay(100);
  int distance = readPing();
  delay(100);
  servo_motor.write(115);
  return distance;
  delay(100);
}
int readPing()
{
  delay(70);
  int cm = sonar.ping_cm();
  if (cm==0)
  { cm=250; }
  return cm; 
}
void STOP()
{
  analogWrite(A0, 0);
  analogWrite(A1, 0);
  analogWrite(A2, 0);
  analogWrite(A3, 0);
  analogWrite(3, 100);
  //obs();
}
// void f()
// {
//   // open the file. note that only one file can be open at a time,
//   // so you have to close this one before opening another.
//   myFile = SD.open("test.txt", FILE_WRITE);
//   // re-open the file for reading:
//   myFile = SD.open("test.txt");
//   Serial.println("forward.txt:"); 
//   Serial.println("forward.txt:");
//   myFile.close(); 
// }
// void r()
// {
//   // open the file. note that only one file can be open at a time,
//   // so you have to close this one before opening another.
//   myFile = SD.open("test.txt", FILE_WRITE);
//   // re-open the file for reading:
//   myFile = SD.open("test.txt");
//   Serial.println("right.txt:"); 
//   Serial.println("right.txt:");
//   myFile.close(); 
// }
// void l()
// {
//   // open the file. note that only one file can be open at a time,
//   // so you have to close this one before opening another.
//   myFile = SD.open("test.txt", FILE_WRITE);
//   // re-open the file for reading:
//   myFile = SD.open("test.txt");
//   Serial.println("left.txt:"); 
//   Serial.println("left.txt:");
//   myFile.close(); 
// }
// void bs()
// {
//   // open the file. note that only one file can be open at a time,
//   // so you have to close this one before opening another.
//   myFile = SD.open("test.txt", FILE_WRITE);
//   // re-open the file for reading:
//   myFile = SD.open("test.txt");
//   Serial.println("back.txt:"); 
//   Serial.println("back.txt:");
//   myFile.close();
// }
// void obs()
// {
//   // open the file. note that only one file can be open at a time,
//   // so you have to close this one before opening another.
//   myFile = SD.open("test.txt", FILE_WRITE);
//   // re-open the file for reading:
//   myFile = SD.open("test.txt");
//   Serial.println("Obstacle.txt:"); 
//   Serial.println("Obstacle.txt:"); 
//   myFile.close();
// }


